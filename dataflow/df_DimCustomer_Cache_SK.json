{
	"name": "df_DimCustomer_Cache_SK",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_customers_csv",
						"type": "DatasetReference"
					},
					"name": "sourceCustomer"
				},
				{
					"dataset": {
						"referenceName": "ds_synapse_DimCustomer_SK",
						"type": "DatasetReference"
					},
					"name": "getMaxID"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_synapse_DimCustomer_SK",
						"type": "DatasetReference"
					},
					"name": "sinkDimCustomer"
				},
				{
					"name": "sinkMaxID"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "surrogateKeyCustomerSK"
				},
				{
					"name": "CustomerSKupdated"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as string,",
				"          NameStyle as string,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceCustomer",
				"source(output(",
				"          CustomerSK as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT MAX([CustomerSK]) as CustomerSK FROM [dbo].[DimCustomer_SK]',",
				"     format: 'query',",
				"     staged: true) ~> getMaxID",
				"sourceCustomer select(mapColumn(",
				"          CustomerID,",
				"          CompanyName,",
				"          SalesPerson",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 keyGenerate(output(CustomerSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKeyCustomerSK",
				"surrogateKeyCustomerSK derive(CustomerSK = coalesce(sinkMaxID#outputs()[1].CustomerSK, 0) + CustomerSK) ~> CustomerSKupdated",
				"CustomerSKupdated sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerSK as integer,",
				"          CustomerID as integer,",
				"          CompanyName as string,",
				"          SalesPerson as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerSK,",
				"          CustomerID,",
				"          CompanyName,",
				"          SalesPerson",
				"     )) ~> sinkDimCustomer",
				"getMaxID sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          CustomerSK",
				"     )) ~> sinkMaxID"
			]
		}
	}
}